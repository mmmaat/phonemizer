# This CI script is run on a private server from the CoML team, it is not
# intended to be used by general users.

before_script:
  # load the requested modules on oberon
  - module load anaconda/3 festival/2.4 mbrola

phonemizer-build:
  stage: build
  script:
    # create a Python virtual environment dedicated to the test (if not existing)
    - conda create --name phonemizer-ci python=3 2> /dev/null || true
    - conda activate phonemizer-ci

    # install dependencies for testing
    - pip install --upgrade pytest coverage

    # install phonemizer
    - python setup.py install

.phonemizer-test: &phonemizer-test
# run the unit tests within the CI environment
- conda activate phonemizer-ci
- phonemize --version
- coverage run && coverage report

phonemizer-test-espeak-1-48-04:
  stage: test
  script:
    # run the unit tests within the CI environment
    - module unload espeak && module load espeak/1.48.04
    - *phonemizer-test

phonemizer-test-espeak-1-49-2:
  stage: test
  script:
    # run the unit tests within the CI environment
    - module unload espeak && module load espeak/1.49.2
    - *phonemizer-test

phonemizer-test-espeak-1-50:
  stage: test
  script:
    # run the unit tests within the CI environment
    - module unload espeak && module load espeak/1.50
    - *phonemizer-test

phonemizer-oberon:
  # install phonemizer in the "wordseg" virtual environment on oberon (users just
  # have to type "conda activate wordseg" to use it)
  stage: deploy
  script:
    - conda activate wordseg
    - cd /shared/apps/phonemizer
    - git pull origin master
    - python setup.py install
  only:
    - tags

phonemizer-pypi:
  # upload the release on PyPI
  stage: deploy
  script:
    - conda activate phonemizer-ci
    - pip install -U twine
    - rm -rf dist
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    - twine upload -u $TWINE_USERNAME -p $TWINE_PASSWORD --non-interactive dist/*
  only:
    - tags
